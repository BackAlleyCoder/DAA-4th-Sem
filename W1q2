/*Given an already sorted array of positive integers, design an algorithm and implement it using a 
program to find whether given key element is present in the array or not. Also, find total number 
of comparisons for each input case. (Time Complexity = O(nlogn), where n is the size of input).*/


#include <stdio.h>

int binarySearch(int arr[], int low, int high, int key, int *comparisons) {
    while (low <= high) {
        (*comparisons)++;
        int mid = low + (high - low) / 2;

        if (arr[mid] == key)
            return mid;

        if (arr[mid] < key)
            low = mid + 1;

        else
            high = mid - 1;
    }

    return -1;
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        int n; 
        scanf("%d", &n);
        int arr[n]; 
        for (int i = 0; i < n; i++) {
            scanf("%d", &arr[i]);
        }

        int key;
        scanf("%d", &key);

        int comparisons = 0;
        int index = binarySearch(arr, 0, n - 1, key, &comparisons);

        if (index != -1)
            printf("Present %d\n", comparisons);
        else
            printf("Not Present %d\n", comparisons);
    }

    return 0;
}
